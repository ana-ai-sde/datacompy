Search.setIndex({"alltitles": {"API Reference": [[4, null]], "Basic Usage": [[3, "basic-usage"], [7, "basic-usage"]], "Caveats": [[6, "caveats"]], "Caveats and Limitations": [[7, "caveats-and-limitations"]], "Compare Object Setup": [[6, "compare-object-setup"], [7, "compare-object-setup"]], "Contents": [[4, "contents"]], "Contributors": [[4, "contributors"]], "Convenience Methods": [[6, "convenience-methods"], [7, "convenience-methods"], [8, "convenience-methods"]], "Cross Comparing": [[3, "cross-comparing"]], "DataComPy": [[4, "datacompy"]], "Developer Instructions": [[2, "developer-instructions"]], "Duplicate rows": [[6, "duplicate-rows"], [7, "duplicate-rows"], [8, "duplicate-rows"]], "Fugue Detail": [[3, "fugue-detail"]], "Future releases": [[3, "future-releases"]], "Generating Documentation": [[2, "generating-documentation"]], "Generating distribution archives (PyPI)": [[2, "generating-distribution-archives-pypi"]], "How it works": [[3, "how-it-works"]], "Indices and tables": [[4, "indices-and-tables"]], "Installation": [[5, "installation"]], "Installing extras": [[4, "installing-extras"]], "Legacy Spark Deprecation": [[4, "legacy-spark-deprecation"]], "Limitations": [[6, "limitations"]], "Management of Requirements": [[2, "management-of-requirements"]], "Module contents": [[0, "module-datacompy"]], "Overview": [[6, "overview"], [7, "overview"]], "Pandas Usage": [[6, "pandas-usage"]], "Polars Usage": [[7, "polars-usage"]], "Pre-Commit Hooks": [[2, "pre-commit-hooks"]], "PyPI (basic)": [[5, "pypi-basic"]], "Quick Installation": [[4, "quick-installation"]], "Release Guide": [[2, "release-guide"]], "Reports": [[6, "reports"], [7, "reports"], [8, "reports"]], "Roadmap": [[4, "roadmap"]], "Run unit tests": [[2, "run-unit-tests"]], "Spark (Pandas on Spark) Usage": [[8, "spark-pandas-on-spark-usage"]], "SparkCompare Object Setup": [[8, "sparkcompare-object-setup"]], "Starting with version 0.12.0": [[4, "starting-with-version-0-12-0"]], "Submodules": [[0, "submodules"]], "Supported Version": [[8, "supported-version"]], "Supported backends": [[4, "supported-backends"]], "Supported versions and dependncies": [[4, "supported-versions-and-dependncies"]], "conda (installs dependencies from Conda Forge)": [[5, "conda-installs-dependencies-from-conda-forge"]], "datacompy": [[1, "datacompy"]], "datacompy package": [[0, "datacompy-package"]], "datacompy.base module": [[0, "module-datacompy.base"]], "datacompy.core module": [[0, "module-datacompy.core"]], "datacompy.fugue module": [[0, "module-datacompy.fugue"]], "datacompy.legacy module": [[0, "module-datacompy.legacy"]], "datacompy.polars module": [[0, "module-datacompy.polars"]], "datacompy.spark module": [[0, "module-datacompy.spark"]], "edgetest": [[2, "edgetest"]], "virtualenv (install dependencies from PyPI)": [[5, "virtualenv-install-dependencies-from-pypi"]]}, "docnames": ["api/datacompy", "api/modules", "developer_instructions", "fugue_usage", "index", "install", "pandas_usage", "polars_usage", "spark_usage"], "envversion": {"sphinx": 61, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2}, "filenames": ["api/datacompy.rst", "api/modules.rst", "developer_instructions.rst", "fugue_usage.rst", "index.rst", "install.rst", "pandas_usage.rst", "polars_usage.rst", "spark_usage.rst"], "indexentries": {"all_columns_match() (datacompy.base.basecompare method)": [[0, "datacompy.base.BaseCompare.all_columns_match", false]], "all_columns_match() (datacompy.core.compare method)": [[0, "datacompy.core.Compare.all_columns_match", false]], "all_columns_match() (datacompy.polars.polarscompare method)": [[0, "datacompy.polars.PolarsCompare.all_columns_match", false]], "all_columns_match() (datacompy.spark.sparkcompare method)": [[0, "datacompy.spark.SparkCompare.all_columns_match", false]], "all_columns_match() (in module datacompy.fugue)": [[0, "datacompy.fugue.all_columns_match", false]], "all_mismatch() (datacompy.base.basecompare method)": [[0, "datacompy.base.BaseCompare.all_mismatch", false]], "all_mismatch() (datacompy.core.compare method)": [[0, "datacompy.core.Compare.all_mismatch", false]], "all_mismatch() (datacompy.polars.polarscompare method)": [[0, "datacompy.polars.PolarsCompare.all_mismatch", false]], "all_mismatch() (datacompy.spark.sparkcompare method)": [[0, "datacompy.spark.SparkCompare.all_mismatch", false]], "all_rows_overlap() (datacompy.base.basecompare method)": [[0, "datacompy.base.BaseCompare.all_rows_overlap", false]], "all_rows_overlap() (datacompy.core.compare method)": [[0, "datacompy.core.Compare.all_rows_overlap", false]], "all_rows_overlap() (datacompy.polars.polarscompare method)": [[0, "datacompy.polars.PolarsCompare.all_rows_overlap", false]], "all_rows_overlap() (datacompy.spark.sparkcompare method)": [[0, "datacompy.spark.SparkCompare.all_rows_overlap", false]], "all_rows_overlap() (in module datacompy.fugue)": [[0, "datacompy.fugue.all_rows_overlap", false]], "base_row_count (datacompy.legacy.legacysparkcompare property)": [[0, "datacompy.legacy.LegacySparkCompare.base_row_count", false]], "basecompare (class in datacompy.base)": [[0, "datacompy.base.BaseCompare", false]], "calculate_max_diff() (in module datacompy.core)": [[0, "datacompy.core.calculate_max_diff", false]], "calculate_max_diff() (in module datacompy.polars)": [[0, "datacompy.polars.calculate_max_diff", false]], "calculate_max_diff() (in module datacompy.spark)": [[0, "datacompy.spark.calculate_max_diff", false]], "columns_compared (datacompy.legacy.legacysparkcompare property)": [[0, "datacompy.legacy.LegacySparkCompare.columns_compared", false]], "columns_equal() (in module datacompy.core)": [[0, "datacompy.core.columns_equal", false]], "columns_equal() (in module datacompy.polars)": [[0, "datacompy.polars.columns_equal", false]], "columns_equal() (in module datacompy.spark)": [[0, "datacompy.spark.columns_equal", false]], "columns_in_both (datacompy.legacy.legacysparkcompare property)": [[0, "datacompy.legacy.LegacySparkCompare.columns_in_both", false]], "columns_only_base (datacompy.legacy.legacysparkcompare property)": [[0, "datacompy.legacy.LegacySparkCompare.columns_only_base", false]], "columns_only_compare (datacompy.legacy.legacysparkcompare property)": [[0, "datacompy.legacy.LegacySparkCompare.columns_only_compare", false]], "common_row_count (datacompy.legacy.legacysparkcompare property)": [[0, "datacompy.legacy.LegacySparkCompare.common_row_count", false]], "compare (class in datacompy.core)": [[0, "datacompy.core.Compare", false]], "compare_row_count (datacompy.legacy.legacysparkcompare property)": [[0, "datacompy.legacy.LegacySparkCompare.compare_row_count", false]], "compare_string_and_date_columns() (in module datacompy.core)": [[0, "datacompy.core.compare_string_and_date_columns", false]], "compare_string_and_date_columns() (in module datacompy.polars)": [[0, "datacompy.polars.compare_string_and_date_columns", false]], "compare_string_and_date_columns() (in module datacompy.spark)": [[0, "datacompy.spark.compare_string_and_date_columns", false]], "count_matching_rows() (datacompy.base.basecompare method)": [[0, "datacompy.base.BaseCompare.count_matching_rows", false]], "count_matching_rows() (datacompy.core.compare method)": [[0, "datacompy.core.Compare.count_matching_rows", false]], "count_matching_rows() (datacompy.polars.polarscompare method)": [[0, "datacompy.polars.PolarsCompare.count_matching_rows", false]], "count_matching_rows() (datacompy.spark.sparkcompare method)": [[0, "datacompy.spark.SparkCompare.count_matching_rows", false]], "count_matching_rows() (in module datacompy.fugue)": [[0, "datacompy.fugue.count_matching_rows", false]], "datacompy": [[0, "module-datacompy", false]], "datacompy.base": [[0, "module-datacompy.base", false]], "datacompy.core": [[0, "module-datacompy.core", false]], "datacompy.fugue": [[0, "module-datacompy.fugue", false]], "datacompy.legacy": [[0, "module-datacompy.legacy", false]], "datacompy.polars": [[0, "module-datacompy.polars", false]], "datacompy.spark": [[0, "module-datacompy.spark", false]], "decimal_comparator() (in module datacompy.legacy)": [[0, "datacompy.legacy.decimal_comparator", false]], "df1 (datacompy.base.basecompare property)": [[0, "datacompy.base.BaseCompare.df1", false]], "df1 (datacompy.core.compare property)": [[0, "datacompy.core.Compare.df1", false]], "df1 (datacompy.polars.polarscompare property)": [[0, "datacompy.polars.PolarsCompare.df1", false]], "df1 (datacompy.spark.sparkcompare property)": [[0, "datacompy.spark.SparkCompare.df1", false]], "df1_unq_columns() (datacompy.base.basecompare method)": [[0, "datacompy.base.BaseCompare.df1_unq_columns", false]], "df1_unq_columns() (datacompy.core.compare method)": [[0, "datacompy.core.Compare.df1_unq_columns", false]], "df1_unq_columns() (datacompy.polars.polarscompare method)": [[0, "datacompy.polars.PolarsCompare.df1_unq_columns", false]], "df1_unq_columns() (datacompy.spark.sparkcompare method)": [[0, "datacompy.spark.SparkCompare.df1_unq_columns", false]], "df2 (datacompy.base.basecompare property)": [[0, "datacompy.base.BaseCompare.df2", false]], "df2 (datacompy.core.compare property)": [[0, "datacompy.core.Compare.df2", false]], "df2 (datacompy.polars.polarscompare property)": [[0, "datacompy.polars.PolarsCompare.df2", false]], "df2 (datacompy.spark.sparkcompare property)": [[0, "datacompy.spark.SparkCompare.df2", false]], "df2_unq_columns() (datacompy.base.basecompare method)": [[0, "datacompy.base.BaseCompare.df2_unq_columns", false]], "df2_unq_columns() (datacompy.core.compare method)": [[0, "datacompy.core.Compare.df2_unq_columns", false]], "df2_unq_columns() (datacompy.polars.polarscompare method)": [[0, "datacompy.polars.PolarsCompare.df2_unq_columns", false]], "df2_unq_columns() (datacompy.spark.sparkcompare method)": [[0, "datacompy.spark.SparkCompare.df2_unq_columns", false]], "generate_id_within_group() (in module datacompy.core)": [[0, "datacompy.core.generate_id_within_group", false]], "generate_id_within_group() (in module datacompy.polars)": [[0, "datacompy.polars.generate_id_within_group", false]], "generate_id_within_group() (in module datacompy.spark)": [[0, "datacompy.spark.generate_id_within_group", false]], "get_merged_columns() (in module datacompy.core)": [[0, "datacompy.core.get_merged_columns", false]], "get_merged_columns() (in module datacompy.polars)": [[0, "datacompy.polars.get_merged_columns", false]], "get_merged_columns() (in module datacompy.spark)": [[0, "datacompy.spark.get_merged_columns", false]], "intersect_columns() (datacompy.base.basecompare method)": [[0, "datacompy.base.BaseCompare.intersect_columns", false]], "intersect_columns() (datacompy.core.compare method)": [[0, "datacompy.core.Compare.intersect_columns", false]], "intersect_columns() (datacompy.polars.polarscompare method)": [[0, "datacompy.polars.PolarsCompare.intersect_columns", false]], "intersect_columns() (datacompy.spark.sparkcompare method)": [[0, "datacompy.spark.SparkCompare.intersect_columns", false]], "intersect_columns() (in module datacompy.fugue)": [[0, "datacompy.fugue.intersect_columns", false]], "intersect_rows_match() (datacompy.base.basecompare method)": [[0, "datacompy.base.BaseCompare.intersect_rows_match", false]], "intersect_rows_match() (datacompy.core.compare method)": [[0, "datacompy.core.Compare.intersect_rows_match", false]], "intersect_rows_match() (datacompy.polars.polarscompare method)": [[0, "datacompy.polars.PolarsCompare.intersect_rows_match", false]], "intersect_rows_match() (datacompy.spark.sparkcompare method)": [[0, "datacompy.spark.SparkCompare.intersect_rows_match", false]], "is_match() (in module datacompy.fugue)": [[0, "datacompy.fugue.is_match", false]], "known_difference (datacompy.legacy.matchtype attribute)": [[0, "datacompy.legacy.MatchType.KNOWN_DIFFERENCE", false]], "legacysparkcompare (class in datacompy.legacy)": [[0, "datacompy.legacy.LegacySparkCompare", false]], "match (datacompy.legacy.matchtype attribute)": [[0, "datacompy.legacy.MatchType.MATCH", false]], "matches() (datacompy.base.basecompare method)": [[0, "datacompy.base.BaseCompare.matches", false]], "matches() (datacompy.core.compare method)": [[0, "datacompy.core.Compare.matches", false]], "matches() (datacompy.polars.polarscompare method)": [[0, "datacompy.polars.PolarsCompare.matches", false]], "matches() (datacompy.spark.sparkcompare method)": [[0, "datacompy.spark.SparkCompare.matches", false]], "matchtype (class in datacompy.legacy)": [[0, "datacompy.legacy.MatchType", false]], "mismatch (datacompy.legacy.matchtype attribute)": [[0, "datacompy.legacy.MatchType.MISMATCH", false]], "module": [[0, "module-datacompy", false], [0, "module-datacompy.base", false], [0, "module-datacompy.core", false], [0, "module-datacompy.fugue", false], [0, "module-datacompy.legacy", false], [0, "module-datacompy.polars", false], [0, "module-datacompy.spark", false]], "polarscompare (class in datacompy.polars)": [[0, "datacompy.polars.PolarsCompare", false]], "render() (in module datacompy.core)": [[0, "datacompy.core.render", false]], "render() (in module datacompy.polars)": [[0, "datacompy.polars.render", false]], "render() (in module datacompy.spark)": [[0, "datacompy.spark.render", false]], "report() (datacompy.base.basecompare method)": [[0, "datacompy.base.BaseCompare.report", false]], "report() (datacompy.core.compare method)": [[0, "datacompy.core.Compare.report", false]], "report() (datacompy.legacy.legacysparkcompare method)": [[0, "datacompy.legacy.LegacySparkCompare.report", false]], "report() (datacompy.polars.polarscompare method)": [[0, "datacompy.polars.PolarsCompare.report", false]], "report() (datacompy.spark.sparkcompare method)": [[0, "datacompy.spark.SparkCompare.report", false]], "report() (in module datacompy.fugue)": [[0, "datacompy.fugue.report", false]], "rows_both_all (datacompy.legacy.legacysparkcompare property)": [[0, "datacompy.legacy.LegacySparkCompare.rows_both_all", false]], "rows_both_mismatch (datacompy.legacy.legacysparkcompare property)": [[0, "datacompy.legacy.LegacySparkCompare.rows_both_mismatch", false]], "rows_only_base (datacompy.legacy.legacysparkcompare property)": [[0, "datacompy.legacy.LegacySparkCompare.rows_only_base", false]], "rows_only_compare (datacompy.legacy.legacysparkcompare property)": [[0, "datacompy.legacy.LegacySparkCompare.rows_only_compare", false]], "sample_mismatch() (datacompy.base.basecompare method)": [[0, "datacompy.base.BaseCompare.sample_mismatch", false]], "sample_mismatch() (datacompy.core.compare method)": [[0, "datacompy.core.Compare.sample_mismatch", false]], "sample_mismatch() (datacompy.polars.polarscompare method)": [[0, "datacompy.polars.PolarsCompare.sample_mismatch", false]], "sample_mismatch() (datacompy.spark.sparkcompare method)": [[0, "datacompy.spark.SparkCompare.sample_mismatch", false]], "sparkcompare (class in datacompy.spark)": [[0, "datacompy.spark.SparkCompare", false]], "subset() (datacompy.base.basecompare method)": [[0, "datacompy.base.BaseCompare.subset", false]], "subset() (datacompy.core.compare method)": [[0, "datacompy.core.Compare.subset", false]], "subset() (datacompy.polars.polarscompare method)": [[0, "datacompy.polars.PolarsCompare.subset", false]], "subset() (datacompy.spark.sparkcompare method)": [[0, "datacompy.spark.SparkCompare.subset", false]], "temp_column_name() (in module datacompy.core)": [[0, "datacompy.core.temp_column_name", false]], "temp_column_name() (in module datacompy.polars)": [[0, "datacompy.polars.temp_column_name", false]], "temp_column_name() (in module datacompy.spark)": [[0, "datacompy.spark.temp_column_name", false]], "unq_columns() (in module datacompy.fugue)": [[0, "datacompy.fugue.unq_columns", false]]}, "objects": {"": [[0, 0, 0, "-", "datacompy"]], "datacompy": [[0, 0, 0, "-", "base"], [0, 0, 0, "-", "core"], [0, 0, 0, "-", "fugue"], [0, 0, 0, "-", "legacy"], [0, 0, 0, "-", "polars"], [0, 0, 0, "-", "spark"]], "datacompy.base": [[0, 1, 1, "", "BaseCompare"]], "datacompy.base.BaseCompare": [[0, 2, 1, "", "all_columns_match"], [0, 2, 1, "", "all_mismatch"], [0, 2, 1, "", "all_rows_overlap"], [0, 2, 1, "", "count_matching_rows"], [0, 3, 1, "", "df1"], [0, 2, 1, "", "df1_unq_columns"], [0, 3, 1, "", "df2"], [0, 2, 1, "", "df2_unq_columns"], [0, 2, 1, "", "intersect_columns"], [0, 2, 1, "", "intersect_rows_match"], [0, 2, 1, "", "matches"], [0, 2, 1, "", "report"], [0, 2, 1, "", "sample_mismatch"], [0, 2, 1, "", "subset"]], "datacompy.core": [[0, 1, 1, "", "Compare"], [0, 4, 1, "", "calculate_max_diff"], [0, 4, 1, "", "columns_equal"], [0, 4, 1, "", "compare_string_and_date_columns"], [0, 4, 1, "", "generate_id_within_group"], [0, 4, 1, "", "get_merged_columns"], [0, 4, 1, "", "render"], [0, 4, 1, "", "temp_column_name"]], "datacompy.core.Compare": [[0, 2, 1, "", "all_columns_match"], [0, 2, 1, "", "all_mismatch"], [0, 2, 1, "", "all_rows_overlap"], [0, 2, 1, "", "count_matching_rows"], [0, 3, 1, "", "df1"], [0, 2, 1, "", "df1_unq_columns"], [0, 3, 1, "", "df2"], [0, 2, 1, "", "df2_unq_columns"], [0, 2, 1, "", "intersect_columns"], [0, 2, 1, "", "intersect_rows_match"], [0, 2, 1, "", "matches"], [0, 2, 1, "", "report"], [0, 2, 1, "", "sample_mismatch"], [0, 2, 1, "", "subset"]], "datacompy.fugue": [[0, 4, 1, "", "all_columns_match"], [0, 4, 1, "", "all_rows_overlap"], [0, 4, 1, "", "count_matching_rows"], [0, 4, 1, "", "intersect_columns"], [0, 4, 1, "", "is_match"], [0, 4, 1, "", "report"], [0, 4, 1, "", "unq_columns"]], "datacompy.legacy": [[0, 1, 1, "", "LegacySparkCompare"], [0, 1, 1, "", "MatchType"], [0, 4, 1, "", "decimal_comparator"]], "datacompy.legacy.LegacySparkCompare": [[0, 3, 1, "", "base_row_count"], [0, 3, 1, "", "columns_compared"], [0, 3, 1, "", "columns_in_both"], [0, 3, 1, "", "columns_only_base"], [0, 3, 1, "", "columns_only_compare"], [0, 3, 1, "", "common_row_count"], [0, 3, 1, "", "compare_row_count"], [0, 2, 1, "", "report"], [0, 3, 1, "", "rows_both_all"], [0, 3, 1, "", "rows_both_mismatch"], [0, 3, 1, "", "rows_only_base"], [0, 3, 1, "", "rows_only_compare"]], "datacompy.legacy.MatchType": [[0, 5, 1, "", "KNOWN_DIFFERENCE"], [0, 5, 1, "", "MATCH"], [0, 5, 1, "", "MISMATCH"]], "datacompy.polars": [[0, 1, 1, "", "PolarsCompare"], [0, 4, 1, "", "calculate_max_diff"], [0, 4, 1, "", "columns_equal"], [0, 4, 1, "", "compare_string_and_date_columns"], [0, 4, 1, "", "generate_id_within_group"], [0, 4, 1, "", "get_merged_columns"], [0, 4, 1, "", "render"], [0, 4, 1, "", "temp_column_name"]], "datacompy.polars.PolarsCompare": [[0, 2, 1, "", "all_columns_match"], [0, 2, 1, "", "all_mismatch"], [0, 2, 1, "", "all_rows_overlap"], [0, 2, 1, "", "count_matching_rows"], [0, 3, 1, "", "df1"], [0, 2, 1, "", "df1_unq_columns"], [0, 3, 1, "", "df2"], [0, 2, 1, "", "df2_unq_columns"], [0, 2, 1, "", "intersect_columns"], [0, 2, 1, "", "intersect_rows_match"], [0, 2, 1, "", "matches"], [0, 2, 1, "", "report"], [0, 2, 1, "", "sample_mismatch"], [0, 2, 1, "", "subset"]], "datacompy.spark": [[0, 1, 1, "", "SparkCompare"], [0, 4, 1, "", "calculate_max_diff"], [0, 4, 1, "", "columns_equal"], [0, 4, 1, "", "compare_string_and_date_columns"], [0, 4, 1, "", "generate_id_within_group"], [0, 4, 1, "", "get_merged_columns"], [0, 4, 1, "", "render"], [0, 4, 1, "", "temp_column_name"]], "datacompy.spark.SparkCompare": [[0, 2, 1, "", "all_columns_match"], [0, 2, 1, "", "all_mismatch"], [0, 2, 1, "", "all_rows_overlap"], [0, 2, 1, "", "count_matching_rows"], [0, 3, 1, "", "df1"], [0, 2, 1, "", "df1_unq_columns"], [0, 3, 1, "", "df2"], [0, 2, 1, "", "df2_unq_columns"], [0, 2, 1, "", "intersect_columns"], [0, 2, 1, "", "intersect_rows_match"], [0, 2, 1, "", "matches"], [0, 2, 1, "", "report"], [0, 2, 1, "", "sample_mismatch"], [0, 2, 1, "", "subset"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"], "4": ["py", "function", "Python function"], "5": ["py", "attribute", "Python attribute"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:property", "4": "py:function", "5": "py:attribute"}, "terms": {"": [0, 4, 6, 7, 8], "0": [0, 2, 3, 6, 7, 8], "000": [6, 7, 8], "0000": [6, 7, 8], "0001": [6, 7], "0005": [6, 7, 8], "01": [3, 6, 7, 8], "05": [3, 6, 7, 8], "0500": [6, 7, 8], "1": [0, 2, 3, 4, 6, 7, 8], "10": [0, 3, 4, 6, 7, 8], "100": 0, "10000001234": [3, 6, 7, 8], "10000001235": [3, 6, 7, 8], "10000001236": [3, 6, 7, 8], "10000001237": [3, 6, 7, 8], "10000001238": [3, 6, 7, 8], "10000001239": [3, 8], "11": [4, 7], "111": [3, 6, 7, 8], "12": [3, 5, 6, 7, 8], "123": [3, 6, 7, 8], "123456": [3, 6, 7, 8], "1345": [3, 6, 7, 8], "14530": [3, 6, 7, 8], "155": [3, 6, 7, 8], "1555": [3, 6, 7, 8], "2": [0, 4, 6, 7, 8], "2017": [3, 6, 7, 8], "21": 2, "3": [2, 4, 5, 6, 7, 8], "345": [3, 6, 7, 8], "4": [3, 4, 6, 7, 8], "44101": 8, "45": [3, 6, 7, 8], "5": [2, 4, 6, 7, 8], "6": [2, 6, 7, 8], "7": [2, 6], "8": [0, 4, 7], "9": [4, 5], "A": [0, 2, 5, 6, 7, 8], "And": [6, 8], "As": 7, "At": 4, "By": [0, 4], "For": [2, 3, 4, 6, 7, 8], "If": [0, 4, 5, 6, 8], "In": [2, 3, 6, 8], "It": [2, 6, 8], "NOT": 8, "No": 8, "Not": 4, "OR": [6, 7], "The": [0, 2, 3, 4, 6, 7, 8], "Then": [2, 4], "There": [6, 7, 8], "To": [4, 8], "Will": 0, "With": [3, 4, 8], "_df1": 0, "_io": 0, "_merge_left": 8, "_merge_right": 8, "_temp_x": 0, "ab": 0, "abc": 0, "about": [2, 6], "abov": [2, 4, 5, 6, 7, 8], "abs_tol": [0, 3, 6, 7, 8], "absolut": [0, 6, 7, 8], "abstract": 0, "accept": 4, "access": 3, "acct_id": [3, 6, 7, 8], "acct_id_df1": 8, "acct_id_df2": 8, "accur": 4, "achiev": 3, "across": [3, 4], "action": 2, "activ": [2, 5], "actual": 0, "ad": [0, 2], "add": 5, "addit": 2, "adher": 4, "adopt": 3, "after": [2, 6, 7, 8], "again": [6, 8], "against": 0, "aggreg": 3, "agreement": 4, "align": [4, 8], "all": [0, 2, 4, 5, 6, 7, 8], "all_columns_match": [0, 1, 3, 4], "all_mismatch": [0, 1], "all_rows_overlap": [0, 1, 3, 4], "allow": [0, 8], "alreadi": [0, 6], "also": [0, 2, 3, 4, 6, 7, 8], "amount": 0, "an": [0, 7], "ani": [0, 2, 4, 6, 7, 8], "anoth": 0, "anydatafram": 0, "apach": [7, 8], "api": [2, 8], "apidoc": 2, "append": 0, "appli": 0, "appreci": 4, "ar": [0, 2, 3, 4, 5, 6, 7, 8], "archiv": 4, "arr1": 6, "arr2": 6, "arrow": [3, 4, 7], "artifact": 2, "ask": 4, "assert_almost_equ": 6, "assert_array_equ": 6, "assert_frame_equ": 6, "assert_series_equ": 6, "attempt": 0, "autom": 2, "automag": 0, "automat": 2, "avail": [6, 7, 8], "awar": 7, "b": 0, "back": 2, "backend": [3, 8], "background": 3, "base": [1, 2, 3, 4, 6], "base_column_nam": 0, "base_df": 0, "base_row_count": [0, 1], "basecompar": [0, 1, 4], "basi": 0, "basic": [0, 4], "been": [6, 7, 8], "befor": [0, 2, 4, 6, 8], "behaviour": [4, 7, 8], "behind": [2, 6, 8], "being": [0, 2], "below": [2, 4], "benefit": 3, "better": [4, 8], "between": [0, 6], "bin": 5, "black": 2, "bluth": [3, 6, 7, 8], "bob": [3, 6, 7, 8], "bool": [0, 7], "boolean": 0, "both": 0, "boto3": 2, "branch": 2, "break": 2, "brows": 8, "build": 2, "builder": [3, 8], "c": 2, "cach": 0, "cache_intermedi": 0, "calculate_max_diff": [0, 1, 4], "call": [6, 7, 8], "can": [0, 2, 3, 4, 6, 7, 8], "canon": 0, "capabl": 6, "carri": 4, "case": [0, 3], "cast": 0, "cast_column_names_low": 0, "caus": 0, "caveat": 4, "certain": 0, "chang": 2, "channel": 5, "check": [0, 6], "checkout": 2, "choic": 6, "chunk": 3, "cla": 4, "class": [0, 3, 6], "clean": 2, "coars": 3, "code": [2, 3, 4, 7, 8], "cogroup": 3, "col_1": 0, "col_2": 0, "collaps": 2, "collect": 2, "column": [0, 3, 6, 7, 8], "column_count": 0, "column_map": 0, "columnar": 7, "columns_compar": [0, 1], "columns_equ": [0, 1, 4], "columns_in_both": [0, 1], "columns_map": 0, "columns_only_bas": [0, 1], "columns_only_compar": [0, 1], "combin": [6, 8], "come": [2, 6, 7], "command": [0, 2], "commit": 4, "common": [0, 6, 7, 8], "common_row_count": [0, 1], "commun": [2, 3], "compar": [0, 1, 4, 8], "compare_column_nam": 0, "compare_df": 0, "compare_row_count": [0, 1], "compare_string_and_date_column": [0, 1, 4], "comparin": 0, "comparison": [0, 3, 6, 7, 8], "compat": [3, 4], "compris": 0, "conda": 4, "conduct": 4, "config": 5, "configur": 2, "consid": [0, 7, 8], "consist": [0, 3, 4, 8], "constraint": 6, "contain": [0, 6], "content": 1, "contribut": 4, "control": 0, "conveni": 4, "convent": 0, "convert": [0, 6], "core": [1, 2, 4], "correspond": [2, 3], "could": 6, "count": 0, "count_matching_row": [0, 1, 4], "creat": [0, 5], "createdatafram": 3, "creation": 0, "cross": 4, "current": [4, 6, 8], "dai": 2, "dask": [3, 4], "data": [0, 3, 4, 6], "data1": [3, 6, 7, 8], "data2": [3, 6, 7, 8], "datacompi": [2, 3, 5, 6, 7, 8], "datacompy_nul": 6, "datafram": [0, 3, 4, 6, 7, 8], "dataset": [0, 3, 6], "date": [0, 2], "date_fld": [3, 6, 7, 8], "date_fld_df1": 8, "de": 0, "decim": 0, "decimal_compar": [0, 1, 4], "decis": 2, "dedup": 0, "dedupl": 0, "default": [0, 2, 3, 8], "defin": [0, 2], "denot": 2, "depend": [2, 3, 4], "deprec": [3, 8], "describ": [0, 6], "detail": [2, 4], "dev": 2, "develop": 4, "df1": [0, 1, 3, 6, 7, 8], "df1_name": [0, 3, 6, 7, 8], "df1_unq_column": [0, 1, 6, 7, 8], "df1_unq_row": [0, 6, 7, 8], "df2": [0, 1, 3, 6, 7, 8], "df2_name": [0, 3, 6, 7, 8], "df2_unq_column": [0, 1, 6, 7, 8], "df2_unq_row": [0, 6, 7, 8], "dict": 0, "dictionari": 0, "diff": [6, 7, 8], "differ": [0, 3, 4, 6, 7, 8], "directli": 6, "directori": [0, 2], "disconnect": 2, "disk": 6, "displai": 0, "dist": 2, "distinguish": 0, "distribut": 4, "do": [0, 3], "doc": 2, "docstr": 2, "document": [4, 7], "doe": [6, 7, 8], "dollar_amt": [3, 6, 7, 8], "dollar_amt_df1": 8, "dollar_amt_df2": 8, "don": [0, 6, 7, 8], "done": [0, 8], "downgrad": 8, "drop": [4, 6, 8], "dtype": [6, 7, 8], "duckdb": [3, 4], "due": 7, "dupe": 0, "duplic": 4, "e": [0, 2], "each": [0, 2, 3, 6, 8], "easier": 2, "easili": 0, "edgetest": 4, "empti": 6, "encod": 0, "endless": 2, "engin": 7, "ensur": 2, "enter": 0, "enum": 0, "enumer": 0, "env": 5, "environ": [2, 5], "equal": [0, 4, 6, 7, 8], "equival": 3, "evalu": 0, "exact": 0, "exactli": [0, 3, 6], "exampl": [0, 3, 6, 8], "excel": 2, "except": 0, "exclud": 0, "execut": [0, 2], "exist": 0, "expect": 4, "experiment": [4, 7], "export": 2, "extend": [0, 4], "extra": 2, "f64": 7, "fail": [0, 6], "fals": [0, 3, 6, 7, 8], "fast": 0, "favour": 3, "featur": 2, "feedback": 3, "few": [6, 7, 8], "field": [0, 6], "file": 0, "filehandl": 0, "filenam": 0, "fill": 6, "final": [2, 3], "fine": [4, 5], "first": [0, 2, 6, 7, 8], "fit": 6, "flag": 0, "float": 0, "float64": [6, 7, 8], "float_fld": [3, 6, 7, 8], "float_fld_df1": 8, "float_fld_df2": 8, "folder": 2, "follow": [2, 3, 7], "for_displai": 0, "forc": 0, "forg": 4, "form": 0, "format": [0, 7], "forward": [4, 8], "found": 4, "frame": 0, "framework": 3, "from": [0, 2, 3, 4, 6, 7, 8], "from_panda": 8, "fugu": [1, 4, 8], "full": 3, "fulli": 0, "functioanl": [4, 5], "function": [0, 3, 4, 7], "futur": [2, 4], "gather": 3, "gener": [0, 4, 6, 7, 8], "generate_id_within_group": [0, 1, 4], "georg": [3, 6, 7, 8], "get": [0, 3], "get_merged_column": [0, 1, 4], "getorcr": [3, 8], "gh": 2, "ghpage": 2, "git": 2, "github": [2, 4], "given": 0, "go": [0, 2], "goal": 6, "gold": 0, "good": 7, "googl": 2, "great": 3, "group": [0, 6, 8], "guarante": 3, "guid": 4, "guidanc": 2, "gz": 2, "ha": [2, 6, 7, 8], "handl": [0, 6, 7, 8], "have": [0, 2, 3, 4, 6, 7, 8], "help": 2, "helper": 2, "here": [2, 4, 6, 7, 8], "highli": 5, "honor": 4, "hook": 4, "hope": 3, "how": [2, 4], "html": [0, 2], "html_file": 0, "http": [2, 8], "human": [0, 3, 6, 8], "i": [0, 2, 3, 4, 5, 6, 7, 8], "i64": 7, "id": [0, 6, 8], "ident": 0, "identifi": 0, "ignor": 0, "ignore_cas": 0, "ignore_extra_column": [0, 8], "ignore_matching_col": 0, "ignore_spac": 0, "implement": [3, 4, 7, 8], "implementaion": 8, "import": [3, 4, 6, 7, 8], "includ": [0, 2], "independ": 2, "index": [0, 4, 6, 7], "indic": 0, "individu": 0, "initi": 6, "input": 0, "instal": [2, 3], "instanc": [0, 6, 7, 8], "instanti": 0, "instead": 0, "instruct": 4, "int": 0, "integ": 0, "integr": [3, 4], "interact": 4, "interfac": [3, 4, 7], "intermedi": 0, "intersect": 0, "intersect_column": [0, 1, 3, 4, 6, 7, 8], "intersect_row": [6, 7, 8], "intersect_rows_match": [0, 1], "io": [3, 6, 7, 8], "is_match": [0, 1, 3, 4], "isclos": 0, "isn": 0, "isort": 2, "issu": [4, 8], "its": [0, 4], "jira": 8, "join": [0, 3, 6, 7, 8], "join_column": [0, 3, 6, 7, 8], "join_nul": 7, "just": [0, 2, 3, 4, 7], "keep": [2, 4, 8], "kei": 0, "kinda": 0, "know": 6, "known": 0, "known_differ": [0, 1], "larg": [0, 6], "lazi": 0, "legaci": [1, 2, 8], "legacysparkcompar": [0, 1, 4, 8], "less": 8, "let": [2, 4], "level": 4, "librari": [3, 4], "licens": 4, "like": [0, 2, 3, 4, 6, 7, 8], "limit": 4, "list": [0, 3, 6, 7, 8], "ll": 2, "loblaw": [3, 6, 7, 8], "local": 2, "logic": 4, "look": [0, 6], "loos": [3, 6, 7, 8], "lot": 6, "lower": 0, "lowest": 4, "lucil": [3, 6, 7, 8], "m": 2, "machin": 2, "mahari": [3, 6, 7, 8], "mai": [3, 6, 7], "main": [2, 6], "maintain": [3, 8], "make": [0, 2, 4], "makefil": 2, "manag": [3, 4], "mani": [3, 4], "map": 3, "match": [0, 1, 4, 6, 7, 8], "match_rat": 0, "matchtyp": [0, 1, 4], "matrix": 4, "max": [6, 7, 8], "maximum": 0, "mean": 4, "meant": 0, "memori": [0, 6, 7], "mention": 7, "merg": [0, 2, 6, 8], "merged_df": 0, "messag": 2, "method": [3, 4], "michael": [3, 6, 7, 8], "might": [7, 8], "migrat": 7, "mismatch": [0, 1], "mode": 0, "model": 7, "modul": [1, 4, 8], "more": [0, 2, 4, 6], "most": 2, "move": [4, 8], "much": 2, "multipl": 0, "must": [0, 2, 3, 7], "my_report": 0, "name": [0, 3, 5, 6, 7, 8], "name_df1": [6, 7, 8], "name_df2": [6, 7, 8], "name_match": [6, 7, 8], "nan": [0, 6, 7, 8], "nativ": [3, 4, 8], "na\u00efv": 6, "need": [2, 3, 6, 8], "new": [0, 2, 3, 4, 6, 7, 8], "newlin": 0, "nice": 0, "non": [0, 3], "none": [0, 2], "note": [0, 2, 3, 4, 5, 6, 7, 8], "notic": 3, "now": 8, "np": 0, "npt": 6, "null": [0, 6, 7, 8], "number": [0, 6, 7, 8], "numer": 0, "numpi": [2, 6], "obj1": 6, "obj2": 6, "object": [0, 4], "offic": 8, "offici": 2, "olap": 7, "old": [4, 8], "on_index": [0, 6, 8], "onc": 2, "one": [0, 2, 7, 8], "onli": [0, 2, 6, 7, 8], "open": [0, 4], "oper": [0, 3, 6], "optim": 8, "option": [0, 2, 3, 8], "order": [0, 2, 3], "orderedset": [0, 7, 8], "org": [2, 8], "origin": [0, 3, 4, 6, 7, 8], "original_df": 0, "orphan": 2, "other": [0, 2, 3, 4, 6, 8], "otherwis": 8, "out": [0, 2, 3, 4, 8], "output": [0, 2, 6], "over": [0, 4], "overlap": 0, "overview": 4, "overwrit": 0, "p": 8, "packag": [1, 2, 4], "page": [2, 4], "panda": [0, 2, 3, 4, 5, 7], "pandascompar": 8, "parallel": [0, 3], "paramet": 0, "particip": 4, "partit": 3, "pass": [0, 2, 3], "pd": [3, 6, 8], "peopl": 2, "per": 2, "perform": [0, 3], "pertin": 0, "pick": 6, "pilot": 3, "pip": [2, 3, 4, 5], "pl": 7, "plan": 4, "pleas": [3, 4, 5, 7], "polar": [1, 3, 4, 5], "polarscompar": [0, 1, 4, 7], "pollut": 2, "port": [7, 8], "post": 0, "pre": [0, 4], "prepend": 0, "present": 0, "prevent": [0, 2], "print": [0, 3, 4, 6, 7, 8], "proc": [0, 4, 6], "process": [2, 3, 4], "produc": 3, "project": [2, 4], "properli": 2, "properti": 0, "proport": 0, "provid": [0, 3, 4, 6], "push": 2, "py": 2, "py3": 2, "pypi": 4, "pyproject": 2, "pyspark": [0, 3, 8], "pytest": 2, "python": [2, 3, 4, 5], "pyyaml": 2, "qualiti": 2, "queri": 7, "question": 0, "rai": [3, 4], "rais": 0, "rate": 0, "raw": 0, "re": [6, 8], "read": 0, "read_csv": [3, 6, 7, 8], "readabl": [0, 3, 6, 8], "readi": 0, "real": 2, "reason": 2, "recogn": [6, 8], "recommend": 5, "recomput": 0, "record": 0, "redirect": 0, "refer": 0, "regener": 2, "rel": [0, 6, 7, 8], "rel_tol": [0, 3, 6, 7, 8], "relat": 3, "releas": 4, "render": [0, 1, 2, 4], "replac": [0, 3, 4, 6, 7, 8], "repo": [2, 4], "report": [0, 1, 3, 4], "report_fil": 0, "repositori": 2, "repres": 0, "represent": 0, "requir": 4, "resili": [6, 7], "result": [0, 3, 7], "return": [0, 2, 6, 7, 8], "right": 2, "robert": [3, 6, 7, 8], "root": 2, "row": [0, 4], "rows_both_al": [0, 1], "rows_both_mismatch": [0, 1], "rows_only_bas": [0, 1], "rows_only_compar": [0, 1], "run": [4, 6, 7, 8], "runner": 2, "rust": 7, "sa": [0, 4, 6], "safe": 8, "same": [0, 3, 6], "sampl": [0, 3, 6, 7, 8], "sample_count": 0, "sample_mismatch": [0, 1], "save": 0, "scene": [6, 8], "schema": 0, "seal": [3, 6, 7, 8], "search": 4, "second": [0, 6, 8], "section": [2, 7], "see": [4, 7], "semant": [2, 3], "sens": 0, "separ": 6, "seri": [0, 6], "seriestyp": 0, "serv": [0, 2], "set": [0, 2, 6], "setup": [2, 4], "setuptool": 5, "sever": 2, "shape": 7, "share": 0, "should": [0, 2, 4, 5, 6, 7], "show": 0, "show_all_column": 0, "shown": 0, "sign": 4, "significantli": 0, "similar": [0, 7, 8], "simpl": [2, 3, 4], "sinc": 2, "singl": 2, "size": 0, "skip": 0, "slightli": 7, "so": [6, 7, 8], "some": [0, 4, 6, 7, 8], "some_field": 6, "someth": [2, 4], "somewhat": 6, "soon": 2, "sort": 6, "sourc": [4, 5], "spark": [1, 3], "spark_df2": 3, "spark_sess": 0, "sparkcompar": [0, 1, 3, 4], "sparksess": [0, 3, 8], "specif": 3, "specifi": [0, 3, 6, 7, 8], "speed": 0, "sphinx": 2, "sql": [0, 3, 8], "squash": 2, "standard": 0, "stat": 4, "statement": 0, "stdout": 0, "step": [0, 6], "still": 2, "store": 2, "str": [0, 7], "streamlin": 2, "strict_schema": 0, "string": [0, 6, 7, 8], "stringio": [3, 6, 7, 8], "strip": 0, "style": 2, "sub": 0, "subfold": 2, "submodul": [1, 4], "subset": [0, 1, 2], "suffix": 0, "summar": [3, 8], "summari": [0, 6, 7, 8], "support": [0, 5, 6, 7], "sure": [2, 4], "sy": 0, "t": [0, 6, 7, 8], "tabl": [3, 6, 7, 8], "tag": 2, "take": 0, "taken": 2, "tar": 2, "temp": 0, "temp_column_nam": [0, 1, 4], "temp_id": [6, 8], "templat": 0, "temporari": [0, 6, 8], "test": [4, 5, 6, 8], "textio": 0, "textiowrapp": 0, "than": [3, 4, 8], "thei": [2, 7], "them": 6, "thi": [0, 2, 3, 4, 6, 7, 8], "thing": 7, "third": [6, 8], "though": 3, "time": 4, "toler": [0, 6, 7, 8], "toml": 2, "toni": [6, 8], "top": 7, "total": [6, 7, 8], "track": 0, "transform": 0, "tri": [0, 7], "trigger": 0, "true": [0, 2, 6, 7, 8], "try": [6, 7, 8], "tupl": 0, "tweak": 4, "twine": 2, "two": [0, 3, 4, 6, 7, 8], "txt": 0, "type": [0, 2, 6, 7, 8], "ultim": 0, "under": 2, "unequ": [6, 7, 8], "unexpect": 7, "unifi": [3, 4], "uniqu": [0, 6, 8], "unit": 4, "unittest": 2, "unlik": 7, "unq_column": [0, 1, 3, 4], "until": 8, "up": [0, 2, 6], "updat": 2, "upgrad": [2, 5], "upload": 2, "url": 2, "us": [0, 2, 3, 4, 5, 6, 7, 8], "usag": 4, "user": [0, 2], "utf": 0, "util": 2, "v0": [7, 8], "valu": [0, 6, 7, 8], "valueerror": 6, "vanilla": 0, "variabl": 0, "veri": [6, 7, 8], "versa": 0, "version": [0, 2, 3, 7], "via": [2, 3, 4], "vice": 0, "virtual": 5, "virtualenv": 4, "w": 0, "wa": 0, "wai": [0, 3, 4], "want": [2, 3], "we": [2, 3, 4, 8], "welcom": 4, "what": [0, 4, 6], "wheel": 2, "when": [0, 2, 6], "where": [0, 2], "whether": [0, 6], "which": [0, 2, 3, 6, 7, 8], "while": 0, "whitespac": 0, "whl": 2, "wide": 0, "wisdom": 2, "wise": 0, "wish": [4, 8], "within": [0, 4, 6, 8], "without": 0, "wonder": [6, 8], "work": [0, 2, 4, 5], "workflow": 2, "world": 0, "would": [0, 4], "write": 0, "x": 0, "ye": [6, 7], "yield": 7, "you": [0, 2, 3, 4, 5, 6, 7, 8], "your": [0, 2, 4, 6, 7, 8], "zero": 0}, "titles": ["datacompy package", "datacompy", "Developer Instructions", "Fugue Detail", "DataComPy", "Installation", "Pandas Usage", "Polars Usage", "Spark (Pandas on Spark) Usage"], "titleterms": {"0": 4, "12": 4, "api": 4, "archiv": 2, "backend": 4, "base": 0, "basic": [3, 5, 7], "caveat": [6, 7], "commit": 2, "compar": [3, 6, 7], "conda": 5, "content": [0, 4], "contributor": 4, "conveni": [6, 7, 8], "core": 0, "cross": 3, "datacompi": [0, 1, 4], "depend": 5, "dependnci": 4, "deprec": 4, "detail": 3, "develop": 2, "distribut": 2, "document": 2, "duplic": [6, 7, 8], "edgetest": 2, "extra": 4, "forg": 5, "from": 5, "fugu": [0, 3], "futur": 3, "gener": 2, "guid": 2, "hook": 2, "how": 3, "indic": 4, "instal": [4, 5], "instruct": 2, "legaci": [0, 4], "limit": [6, 7], "manag": 2, "method": [6, 7, 8], "modul": 0, "object": [6, 7, 8], "overview": [6, 7], "packag": 0, "panda": [6, 8], "polar": [0, 7], "pre": 2, "pypi": [2, 5], "quick": 4, "refer": 4, "releas": [2, 3], "report": [6, 7, 8], "requir": 2, "roadmap": 4, "row": [6, 7, 8], "run": 2, "setup": [6, 7, 8], "spark": [0, 4, 8], "sparkcompar": 8, "start": 4, "submodul": 0, "support": [4, 8], "tabl": 4, "test": 2, "unit": 2, "usag": [3, 6, 7, 8], "version": [4, 8], "virtualenv": 5, "work": 3}})